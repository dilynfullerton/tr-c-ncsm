#!/usr/bin/python
"""
$ python doVCE.py <Aeff>

Generates an interaction file based on He4, He5, and He6
output files.
NOTE: File lines are printed to standard out and need to 
be piped into the desired file.
"""


from sys import argv

Aeff = int(argv[1])


def GetE0(Aeff):
  fname = 'he4_%d/he4_A%d.out'%(Aeff,Aeff)
  f = open(fname)
  line = f.readline()
  while 'State # 1   Energy' not in line: line = f.readline()
  ldat = line.split()
  E0 = float(ldat[5])
  return E0


def GetSPE(Aeff,E0):
  np1,np3=999.,999.
  fname = 'he5_%d/he5_A%d.out'%(Aeff,Aeff)
  f = open(fname)
  for line in f:
    if 'State # ' not in line: continue
    ldat = line.split()
    e = float(ldat[5])
    j = int(2*float(ldat[8]))
    if j==1 and np1 ==999.: np1 = e-E0
    if j==3 and np3 ==999.: np3 = e-E0
    if np1!=999. and np3!=999.: break
  return np1,np3


def PrintHeader(Aeff,E0,SPE):
  print '!  Effective SM interaction generated by OLS and VCE with Aeff = %d'%(Aeff)
  print '!  Zero body term: %10.6f'%(E0)
  print '!  Index  n  l  j tz'
  print '!  1     0  1  1  1'
  print '!  2     0  1  3  1'
  print '! '
  print '-999 ','  '.join(['%10.6f'%x for x in SPE]),'  4  6  0.000000'

def GetTBME(Aeff,E0,SPE):
  PrintHeader(Aeff,E0,SPE)
  fname = 'he6_%d/Heff_OLS.dat'%Aeff
  f = open(fname)
  line = f.readline()
  dim = int(line.split()[0])
  kets = []
  for i in range(dim):
    ldat = f.readline().split()
    p,q = [int(x) for x in ldat[1:3]]
    J,T = [int(x) for x in ldat[9:11]]
    kets.append( {'p':p,'q':q,'J':J,'T':T} )
  for i in range(dim):
   ldat = f.readline().split()
   for j in range(i,dim):
    if (kets[i]['J'],kets[i]['T']) != (kets[j]['J'],kets[j]['T']): continue
    v = float(ldat[j])
    if i == j: v-= E0+SPE[kets[i]['p']-1]+SPE[kets[i]['q']-1]
    print '%3d %3d %3d %3d  %3d %3d  %10.6f'%(kets[i]['p'],kets[i]['q'],kets[j]['p'],kets[j]['q'],kets[i]['J'],kets[i]['T'],v)


E0 = GetE0(Aeff)
SPE = GetSPE(Aeff,E0)
GetTBME(Aeff,E0,SPE)

# Do the inconsistent/universal way
#Aeff = 6
#E0 = GetE0(Aeff-2)
#SPE = GetSPE(Aeff-1,E0)
#GetTBME(Aeff,E0,SPE)

